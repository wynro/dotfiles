#!/bin/bash
REPO_PATH="$HOME/dotfiles"

# Check if a given directory exists in the $HOME, if not, create a
# link from the given directory
# Parameters:
#  - $1: Directory to search in $HOME
#  - $2: Name of the substitute
check_directory_and_create_link() {
    if [ ! -d "$HOME/$1" ]; then
        ln -s "$REPO_PATH/$2" "$HOME/$1" &&
            echo "Link from '$REPO_PATH/$2' to '$HOME/$2' created"
    else
        echo "The directory $HOME/$1 already exists, link not created"
    fi
}

# Check if a given file exists in the $HOME, if not, create a link
# from the given file
# Parameters:
#  - $1: File to search in $HOME
#  - $2: Name of the substitute
check_file_and_create_link() {
    if [ ! -f "$HOME/$1" ]; then
        ln -s "$REPO_PATH/$2" "$HOME/$1" &&
            echo "Link to '$HOME/$1' created"
    else
        echo "The file $HOME/$1 already exists, link not created"
    fi
}

# Check if a given file exists in the $HOME, if not, create a hard
# link from the given file
# Parameters:
#  - $1: File to search in $HOME
#  - $2: Name of the substitute
check_file_and_create_hard_link() {
    if [ ! -f "$HOME/$1" ]; then
        ln "$REPO_PATH/$2" "$HOME/$1" &&
            echo "Link to '$HOME/$1' created"
    else
        echo "The file $HOME/$1 already exists, hard link not created"
    fi
}


# Shell configuration
check_file_and_create_link ".profile" "profile"

# Bash configuration
check_file_and_create_link ".bash_logout" "bash_logout"
check_file_and_create_link ".bashrc" "bashrc"
check_directory_and_create_link ".bash-mod" "bash-mod"

# Vim stuff
check_file_and_create_link ".viminfo" "viminfo"
check_file_and_create_link ".vimrc" "vimrc"
check_directory_and_create_link ".vim" "vim"

# Emacs stuff
check_directory_and_create_link ".emacs.d" "emacs.d"

# bin directory
check_directory_and_create_link "bin" "bin"


# i3 stuff
# i3 config
[ ! -f "$HOME/.config/i3/" ] && mkdir -p "$HOME/.config/i3/"
if [ ! -f "$HOME/.config/i3/config" ]; then
    ln -s "$REPO_PATH/i3_config" "$HOME/.config/i3/config" &&
        echo "Link to '$HOME/.config/i3/config' created"
else
    echo "The file $HOME/.config/i3/config already exists, link not created"
fi

# i3bar config
[ ! -f "$HOME/.config/i3status/" ] && mkdir -p "$HOME/.config/i3status/"
if [ ! -f "$HOME/.config/i3status/config" ]; then
    ln -s "$REPO_PATH/i3status_config" "$HOME/.config/i3status/config" &&
        echo "Link to '$HOME/.config/i3status/config' created"
else
    echo "The file $HOME/.config/i3status/config already exists, link not created"
fi
if [ ! -f "$HOME/.config/i3status/minimal_config" ]; then
    ln -s "$REPO_PATH/i3status_minimal_config" "$HOME/.config/i3status/minimal_config" &&
        echo "Link to '$HOME/.config/i3status/minimal_config' created"
else
    echo "The file $HOME/.config/i3status/minimal_config already exists, link not created"
fi


# dm config file
check_file_and_create_link ".dmrc" "dmrc"

# Git config file
check_file_and_create_link ".gitconfig" "gitconfig"

# Feh background config file
check_file_and_create_link ".fehbg" "fehbg"

# Systemd units
USER_UNITS=".config/systemd/user"
mkdir -p "$HOME/$USER_UNITS"
for i in systemd-units/*; do
    check_file_and_create_hard_link "$USER_UNITS/$(basename "$i")" "$i"
    echo "Activating $(basename "$i") unit"
    systemctl --user enable "$(basename "$i")"
done

# X configuration
check_file_and_create_link ".Xresources" "Xresources"

# Quilt config
check_file_and_create_link ".quiltrc-dpkg" "quiltrc-dpkg"
