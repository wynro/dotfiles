#!/bin/bash
# Timestamp: <2016-09-27 - 19:39>
# Autor: Guillermo Robles Gonzalez
#
# Scan the specified directory searching .wbc files, and use them to check unread webcomics

# Exit states
# 0: everything is fine
# 1: Options error
# 2: Help/usage writed, program not executed
# 3: Connection error, program ended

# FIXME: Take this from configuration file
WBC_LOCATION="$HOME/.webcomics.d"

# Verbose levels:
# 0: no verbose, no output except info about new comics
# 1: low verbose, some output about comics
# 2: high verbose, all info about files read, data read and data usage
VERBOSE=0

version=""
usage=""

# Read arguments
while :; do
    case "$1" in
        -h*) echo $usage; exit 2;;
        --version) echo $version; exit 2;;
        -V) VERBOSE=2;;
        -v) VERBOSE=1;;
        -l) WBC_LOCATION="$2"; shift;;
        "") break;;
        *) echo Error: Unrecognized option "$1"; exit 1;;
    esac
    shift
done

# Change IFS (Remember to revert it)
IFS="="

# Test connection
# FIXME: Use a better test
echo "Testing connection..."
if ping -c 4 google.es &> /dev/null; then
    if [ "$VERBOSE" -eq 2 ]; then
        echo Connection checked: connection fine
    fi
else
    echo Connection checked: connection error, program ended
    exit 3
fi

# Main loop
for file in $WBC_LOCATION/*.wbc; do
    # echo $file
    while read -r tag data
    do
        if [ "$VERBOSE" -eq 2 ]; then
            echo Read: "$tag" "$data"
        fi
        case "$tag" in
            "title") TITLE="$data";;
            "url") URL="$data";;
            "s_expr") S_EXPR="$data";;
            "g_expr") G_EXPR="$data";;
            "last") LAST="$data";;
            "#"*) ;;            # Ignore comments
            *)
                # Unrecognized info
                if [ "$VERBOSE" -eq 2 ]; then
                    echo Unrecognized option: "$tag"
                fi
                ;;
        esac
    done < <(cat "$file")
    echo "Checking $TITLE..."
    CURRENT_COMIC=$(wget -O - "$URL" 2> /dev/null | grep "$G_EXPR" | sed "$S_EXPR")
    if [ "$VERBOSE" -ne 0  ]; then
        echo Current "$TITLE": "$CURRENT_COMIC"
        echo Last "$TITLE": "$LAST"
    fi
    if [ "$CURRENT_COMIC" -gt "$LAST" ]; then
        # echo $file
        # echo ==========
        # cat $file
        # echo ==========
        # cat "$file"
        # echo ==========
        # cat "$file" | sed "s/last=.*/last=$CURRENT_COMIC/"
        # echo ==========

        echo -n "You have a new $TITLE!, Open? [Y/n]: "
        read -r selected
        if [ "$selected" = "Y" ]; then
            # This is to force inline sed editing (also portability)
            # sed -e "s/last=.*/last=$CURRENT_COMIC/" "$file" > "$file.tmp" && mv "$file.tmp" "$file"
	    # The indentation problem is driving me nuts
	    ed "$file"<<EOF &>/dev/null
/last=*/c
last=$CURRENT_COMIC
.
wq
EOF
            firefox "$URL" &>/dev/null & # Open comic
        fi
    fi
done
exit 0
